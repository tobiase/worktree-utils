# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks
repos:
  # General file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: mixed-line-ending
        args: ['--fix=lf']

  # Go specific hooks
  - repo: https://github.com/golangci/golangci-lint
    rev: v1.64.2
    hooks:
      - id: golangci-lint
        args: ['--timeout=5m']

  # Go formatting
  - repo: local
    hooks:
      - id: go-fmt
        name: go fmt
        entry: bash -c 'gofmt -w -s $(find . -name "*.go" -not -path "./vendor/*")'
        language: system
        types: [go]
        pass_filenames: false

      - id: go-vet
        name: go vet
        entry: bash -c 'go vet ./...'
        language: system
        types: [go]
        pass_filenames: false

      - id: go-mod-tidy
        name: go mod tidy
        entry: bash -c 'go mod tidy && git diff --exit-code go.mod go.sum'
        language: system
        pass_filenames: false

      - id: go-test
        name: go test
        entry: bash -c 'go test -short ./...'
        language: system
        pass_filenames: false
        stages: [push]

      - id: go-build
        name: go build
        entry: bash -c 'go build ./cmd/wt'
        language: system
        pass_filenames: false

  # Commit message linting
  - repo: https://github.com/compilerla/conventional-pre-commit
    rev: v3.0.0
    hooks:
      - id: conventional-pre-commit
        stages: [commit-msg]
        args: [--strict, --force-scope]
